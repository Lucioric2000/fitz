Fitz: Version 0.0.1.dev
usage: fitz run [-h] [--experiment EXPERIMENT] [--model MODEL]
                [--workflows [{xnatconvert,preproc,onset,model} [{xnatconvert,preproc,onset,model} ...]]]
                [--subjects [SUBJECTS [SUBJECTS ...]]]
                [--plugin {linear,multiproc,ipython,torque,sge,slurm}]
                [--nprocs NPROCS] [--queue QUEUE] [--dontrun]

Process subject-level data in fitz.

This script controls the workflows that process data. Depending on the
workflow, the data may start from raw DICOM or Nifti files and finish
as processed models or group-level stats. See the documentation for the
pipeline (collection of workflows) for information on exactly what the
image inputs and outputs will be.

All fitz workflows use Nipype, so there are several common options for
efficiently running multiple subjects at once with differnt nipype plugins.
The script can thus be run for several subjects at once, and (with a large
enough cluster) all of the subjects can be processed in the time it takes to
process a single run of data linearly.

Nipype creates a cache directory to save processing time when steps are
re-run. If you do not delete your cache directory after running (which is
configured in the project file), repeated use of this script will only
rerun the nodes that have changes to their inputs. Otherwise, you will
have to rerun at the level of the workflows.

Examples
--------

Note that the parameter switches match any unique short version
of the full parameter name.

fitz run -w xnatconvert preproc onset model

    Run every stage of the standar SPM fMRI pipeline for the default
    experiment for each subject defined in $FITZ_DIR/subjects.txt.
    The processing will be distributed locally with the MultiProc plugin
    using 4 processes.

fitz run -s subj1 subj2 subj3 -w preproc

    Run preprocessing of the default experiment for subjects `subj1`,
    `subj2`, and `subj3`.

fitz run -s pilot_subjects -w model -e nback -n 8

    Run the model workflow on the subjects enumerated in
    $FITZ_DIR/pilot_subjects.txt with the experiment details in
    $FITZ_DIR/nback.py. Distribute the execution locally with 8 parallel
    processes.

Usage Details
-------------

optional arguments:
  -h, --help            show this help message and exit
  --experiment EXPERIMENT, -e EXPERIMENT
                        experimental paradigm
  --model MODEL, -m MODEL
                        model to fit
  --workflows [{xnatconvert,preproc,onset,model} [{xnatconvert,preproc,onset,model} ...]], -w [{xnatconvert,preproc,onset,model} [{xnatconvert,preproc,onset,model} ...]]
                        which workflows to run
  --subjects [SUBJECTS [SUBJECTS ...]], -s [SUBJECTS [SUBJECTS ...]]
                        list of subject ids, name of file in lyman directory,
                        or full path to text file with subject ids
  --plugin {linear,multiproc,ipython,torque,sge,slurm}, -p {linear,multiproc,ipython,torque,sge,slurm}
                        worklow execution plugin
  --nprocs NPROCS, -n NPROCS
                        number of MultiProc processes to use
  --queue QUEUE, -q QUEUE
                        which queue for PBS/SGE execution
  --dontrun             don't actually execute the workflows
